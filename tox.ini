[flake8]
max-complexity = 10
filename =
    ./src/*.py,
    ./src/**/*.py,
    ./tests/*.py,
    ./tests/**/*.py
statistics = True
# Make flake8 compatible with black, see the following link:
# https://github.com/psf/black/blob/master/docs/compatible_configs.md
max-line-length=88
extend-ignore = E203

[isort]
# Make isort compatible with black, see the following link:
# https://github.com/psf/black/blob/master/docs/compatible_configs.md
profile = black
known_first_party = patternperfector

[tox]
envlist = py, linters
isolated_build = true

[testenv]
whitelist_externals =
    poetry
deps =
    pytest
    pytest-datadir
    pytest-cov
    poetry
commands =
    poetry install -E testing --no-interaction
    pytest --cov=patternperfector --cov-report=term --junitxml=junit/test-unit-results
    .xml --cov-report=xml tests/unit

[testenv:safety]
description =
    Safety checks your installed dependencies for known security vulnerabilities.
deps =
    safety
commands =
    poetry install --no-interaction
    safety check
whitelist_externals =
    poetry

[linter:flake8]
deps = flake8
commands =
    flake8

[linter:black]
deps = black
commands =
    black --check src

[linter:bandit]
deps = bandit
description =
    Security checker.
commands =
    bandit -r src/patternperfector/

[linter:isort]
deps = isort
commands =
    isort --check-only src

[linter:mypy]
deps = mypy
commands =
    mypy src

[testenv:linters]
description =
    Combines all linters in one, fast, env
deps =
    {[linter:black]deps}
    {[linter:isort]deps}
    {[linter:flake8]deps}
    {[linter:bandit]deps}
    {[linter:mypy]deps}
commands =
    {[linter:black]commands}
    {[linter:isort]commands}
    {[linter:flake8]commands}
    {[linter:bandit]commands}
    {[linter:mypy]commands}
